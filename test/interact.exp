#!/usr/bin/env expect

#
# Test interactive use of nvc -r -c
#
# This is not currently run as part of make check
#

proc name_test {n} {
    puts "\033\[32m$n\033\[0m"
}

proc fail {} {
    puts "\033\[31mfailed\033\[0m"
    exit 1
}

set test  [file dirname $argv0]
set build [pwd]

set timeout 1
expect_after timeout fail

############################################################

name_test "compile source"
system $build/src/nvc -a $test/expect.vhd
system $build/src/nvc -e top

############################################################

name_test "launch shell"
spawn $build/src/nvc -r -c top

############################################################

name_test "banner"
expect -re {nvc [\d]+\.[\d]+ \(llvm .*; tcl .*\)}
expect "Type \"help\""

############################################################

name_test "help"
expect "%" {send "help\n"}
expect "NVC commands:"
expect "Standard TCL commands are also accepted."

############################################################

name_test "copyright"
expect "%" {send "copyright\n"}
expect "Copyright (C) 2011-"
expect "for details."

############################################################

name_test "signals"
expect "%" {send "puts \[llength \[signals\]\]\n"}
expect "8"

############################################################

name_test "show"
expect "%" {send "show {:top:clk} foo\n"}
expect -re ":top:clk *STD_LOGIC *'0'"
expect "object not found: foo"
expect "%" {send "show \[signals {we} {*dout} {addr*}\]\n"}
expect -re ":top:we *STD_LOGIC *'0'"
expect -re ":top:dout *STD_LOGIC *\"UUUUUUUU\""
expect -re ":top:uut:addr_r *STD_LOGIC *\"00000000\""

############################################################

name_test "run and now"
expect "%" {send "now\n"}
expect "0ms"
expect "%" {send "run 1 us\n"}
expect "%" {send "now\n"}
expect "1us"
expect "%" {send "puts \[now -q\]\n"}
expect "1000000000"

############################################################

name_test "restart"
expect "%" {send "restart\n"}
expect "%" {send "now\n"}
expect "0ms"

############################################################

name_test "watch"
expect "%" {send "watch \[signals {clk}\]\n"}
expect "%" {send "run 10 ns\n"}
expect "5ns: update :top:clk '0' -> '1'"
expect "10ns: update :top:clk '1' -> '0'"

############################################################

name_test "unwatch"
expect "%" {send "unwatch \[signals {clk}\]\n"}
expect "%" {send "run 10 ns\n"}
expect {
    "update" fail
    "%"      {send "restart\n"}
}

############################################################

name_test "quit"
expect "%" {send "quit\n"}
expect "Bye."

############################################################

wait
