TESTS = \
	bin/unit_test \
	bin/run_regr    # Must always be last

check_PROGRAMS += $(TESTS) bin/fstdump

EXTRA_PROGRAMS += bin/lockbench

bin_unit_test_SOURCES = \
	test/test_util.c \
	test/test_util.h \
	test/unit_test.c \
	test/test_ident.c \
	test/test_lower.c \
	test/test_parse.c \
	test/test_lib.c \
	test/test_sem.c \
	test/test_simp.c \
	test/test_misc.c \
	test/test_elab.c \
	test/test_bounds.c \
	test/test_value.c \
	test/test_json.c \
	test/test_debug.c \
	test/test_mspace.c \
	test/test_jit.c

bin_unit_test_LDADD = \
	lib/libnvc.a \
	lib/libfastlz.a \
	lib/libjson.a \
	lib/libcpustate.a \
	$(check_LIBS) \
	$(POW_LIB) \
	$(libdw_LIBS)

bin_unit_test_LDFLAGS = $(LDFLAGS) $(AM_LDFLAGS) $(EXPORT_LDFLAGS)

EXTRA_bin_unit_test_DEPENDENCIES = src/symbols.txt

bin_run_regr_SOURCES = test/run_regr.c

bin_fstdump_SOURCES = test/fstdump.c

bin_fstdump_LDADD = lib/libfst.a lib/libfastlz.a

bin_lockbench_SOURCES = test/lockbench.c

bin_lockbench_LDADD = lib/libnvc.a $(libdw_LIBS) lib/libfastlz.a

TESTS_ENVIRONMENT = \
	BUILD_DIR=$(top_builddir) \
	LIB_DIR=$(abs_top_builddir)/lib \
	EXEEXT=$(EXEEXT)

test/run_regr: $(VHPI_PLUGINS)

src = $(top_srcdir)/src
build = $(top_builddir)/src
shared = $(src)/util.c
covdir = $(top_builddir)/coverage

clean-test:
	-test ! -d logs || rm -r logs

if ENABLE_GCOV

cov-reset:
	rm -rf $(covdir)
	find $(top_builddir) -name '*.gcda' -exec rm {} \;
	lcov --directory $(build) --zerocounters

cov-generate:
	mkdir -p $(covdir)
	lcov --directory $(build) --capture --output-file $(covdir)/nvc.raw.info
	lcov --output-file $(covdir)/nvc.info --remove $(covdir)/nvc.raw.info \
	  '/usr/*' '*/lexer.c'

cov-report: cov-generate
	genhtml -o $(covdir) $(covdir)/nvc.info
	-x-www-browser $(covdir)/index.html

endif

if MAINTAINER_MODE
update-test-dist:
	$(AM_V_GEN)( \
	  echo "# Generated automatically, do not edit." ; \
	  echo "EXTRA_DIST += \\" ; \
	  cd $(top_srcdir) ; \
	  git ls-files -- 'test/*.vhd' 'test/*.txt' 'test/*.sh' 'test/*.dump' | \
	    sort | sed -e 's/^/\t/' -e '$$ ! s/$$/ \\/' ; \
	) > $(top_srcdir)/test/dist.mk
endif

.PHONY: update-test-dist

include test/dist.mk
